version: '3.6'

networks:
  kafka-network:
    name: kafka-network
    driver: bridge

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    restart: on-failure
    networks:
        - kafka-network
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  broker:
    image: wurstmeister/kafka
    container_name: broker
    ports:
      - "9092:9092"
    restart: on-failure
    networks:
      - kafka-network
    depends_on:
      - zookeeper
    environment:
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://broker:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  producer:
    build: kafka-metrics-producer
    image: producer
    networks:
      - kafka-network
    ports:
      - "8080:8080"
    depends_on:
      - broker

  consumer:
    build: kafka-metrics-consumer
    image: consumer
    networks:
      - kafka-network
    ports:
      - "8081:8081"
    depends_on:
      - broker